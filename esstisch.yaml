# einfacher Raumsensor, Kind3
# 
# Hardware:
# - Wemos D1 Mini
# - DS18S20 Temperatursensor
#   GND: an GND
#   VCC: an 3.3V
#   DATA: an D5


substitutions:
  fallback_ap_ssid: "Licht Esstisch"
  mqtt_topic_prefix: licht/esstisch
  reboot_timeout: 24h


<<: !include .base.yaml

esphome:
  name: esstisch
  platform: ESP8266
  board: d1_mini
  esp8266_restore_from_flash: False
  build_path: build/esstisch/

globals:
  - id: last_button_ts
    type: long
    restore_value: no
    initial_value: '0'

binary_sensor:
  - platform: gpio
    name: btn1
    pin: D3
    internal: true
    on_press:
      then:
        - light.turn_on:
            id: light1
            brightness: !lambda |-
              // if last button press before >60s and light is on, switch it off
              if (id(light1).current_values.is_on() && (id(sntp_time).now().timestamp)-id(last_button_ts)>60) return 0;

              if (id(light1).current_values.get_brightness()<0.2 || !id(light1).current_values.is_on()) return 0.2;
              if (id(light1).current_values.get_brightness()<0.5) return 0.5;
              if (id(light1).current_values.get_brightness()<1) return 1;
              return 0;
        - lambda: |
            ESP_LOGD("custom", "Last button press: %lu, delta: %lu s",id(last_button_ts), id(sntp_time).now().timestamp-id(last_button_ts));
            // store time of last button press
            id(last_button_ts)=id(sntp_time).now().timestamp;

light:
  - platform: monochromatic
    id: light1
    output: output_light1
    restore_mode: ALWAYS_OFF
    name: light1

output:
  - platform: esp8266_pwm
    id: output_light1
    pin: D5
    frequency: 1000 Hz
