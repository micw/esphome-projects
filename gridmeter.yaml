
substitutions:
  fallback_ap_ssid: "Gridmeter"
  mqtt_topic_prefix: gridmeter
  reboot_timeout: 15min

<<: !include .base.yaml 

esphome:
  name: gridmeter
  platform: ESP8266
  board: d1_mini
  esp8266_restore_from_flash: False

logger:
  baud_rate: 0 # do not log on serial, it can cause a boot loop with uart
  level: INFO

uart:
  - id: meter_in
    rx_pin:
      number: D2
      inverted: false
      mode:
        input: true
        pullup: false
    tx_pin:
      number: TX
    baud_rate: 9600
    data_bits: 8
    parity: NONE
    stop_bits: 1
    rx_buffer_size: 512
    debug:
#      dummy_receiver: true
      direction: RX
      after:
        timeout: 250ms
        bytes: 512
      sequence:
        - uart.write: !lambda return bytes;
        - lambda: id(mqttclient).publish("gridmeter/sensor/sml/state", format_hex(bytes));
#        - lambda: UARTDebug::log_hex(direction, bytes, 0);

sml:
  - id: sml0
    uart_id: meter_in

sensor:
  - platform: sml
    retain: false
    name: "powerTotal"
    id: "powerTotal"
    sml_id: sml0
    obis_code: "1-0:16.7.0"
    unit_of_measurement: W
    accuracy_decimals: 2
    device_class: energy
    filters:
      - multiply: 0.01
  - platform: sml
    retain: false
    name: "energyImportTotal"
    id: "energyImportTotal"
    sml_id: sml0
    obis_code: "1-0:1.8.0"
    unit_of_measurement: Wh
    accuracy_decimals: 3
    device_class: energy
    filters:
      - multiply: 0.00000001
    on_value:
      - binary_sensor.template.publish:
          id: led_delayed_off
          state: ON
      - binary_sensor.template.publish:
          id: led_delayed_off
          state: OFF
  - platform: sml
    retain: false
    name: "energyExportTotal"
    id: "energyExportTotal"
    sml_id: sml0
    obis_code: "1-0:2.8.0"
    unit_of_measurement: Wh
    accuracy_decimals: 3
    device_class: energy
    filters:
      - multiply: 0.00000001

binary_sensor:
  - platform: template
    id: led_delayed_off
    filters:
      - delayed_off: 200ms
    on_press:
      then:
        - light.turn_on:
            id: led
            brightness: 30%
    on_release:
      then:
        - light.turn_off: led

light:
  - platform: monochromatic
    output: led_output
    id: led
    default_transition_length: 0s
    internal: true

output:
  - platform: esp8266_pwm
    pin: D1
    frequency: 1000 Hz
    id: led_output
